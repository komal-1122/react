{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","TextLink","aria-disabled","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","heading","value","rows","onChange","event","target","handleUpclick","console","log","newText","toUpperCase","showAlert","handleLowerclick","toLowerCase","split","length","Alert","alert","message","App","setAlert","setTimeout","setmode","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d078a33f.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" \r\n      data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        \r\n            \r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.TextLink}</Link> */}\r\n            <a className=\"nav-link\" href=\"/about\">{props.TextLink}</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/card\">Cards</a>\r\n          </li>\r\n          \r\n          {/* <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li> */}\r\n          <li className=\"nav-item\">\r\n            <a href='https://example.com' className=\"nav-link disabled\" aria-disabled=\"true\">Disable</a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"form-check form-switch\">\r\n              <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  \r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick =() =>{\r\n      console.log(\"This is text\" + text);\r\n      let newText=text.toUpperCase()\r\n    setText(newText)\r\n    props.showAlert(\"Convert to UpperCase\",\"Success\");\r\n\r\n    }\r\n    const handleLowerclick =() =>{\r\n      let newText=text.toLowerCase()\r\n    setText(newText)\r\n    props.showAlert(\"Convert to LowerCase\",\"Success\");\r\n\r\n    }\r\n    const handlerOnChange =(event) =>{\r\n        // console.log(\"This is text\"); \r\n        setText(event.target.value); // text=value\r\n      }\r\n    const [text, setText] = useState(\"Type Text here\")\r\n  return (\r\n    <>\r\n<div className='container'>\r\n   <div className=\"mb-3\">\r\n        <h1>{props.heading}</h1>\r\n         <textarea className=\"form-control\" id=\"textArea\" value={text} rows=\"5\" onChange={handlerOnChange}></textarea>\r\n   </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpclick}>Convert to UPPER case</button>\r\n        <button className=\"btn btn-primary mx-4\" onClick={handleLowerclick}>Convert to lower case</button>\r\n  </div><br />\r\n  <div className=\"container\">\r\n    <h3>Text Summery</h3>\r\n    <p>{text.split(\" \").length} words, {text.length} Characters</p>\r\n    <p>{0.008 * text.split(\" \").length}Minute Read</p>\r\n    <h4>Preview</h4>\r\n    <p>{text}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n// const capitalize =(word)=>{\r\n//     const lower=word.toLowerCase();\r\n//     return lower.charAt(0).toUpperCase+lower.slice(1)\r\n// }\r\n  return (\r\n    props.alert && <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}:</strong> {props.alert.message}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport Cards from './components/Cards';\nimport Alert from './components/Alert';\nimport React,{useState} from 'react'\nimport { BrowserRouter as Router, Route, Routes, BrowserRouter,  \n} from 'react-router-dom';\n\n\nfunction App() {\n  const [alert, setAlert]=useState(null)\n  const showAlert=(message, type)=>\n  {\n       setAlert({\n        message:message,\n        type:type})\n        setTimeout(() => {\n          setAlert(null)\n        }, 2000);\n      }\n  const [mode, setmode]=useState('light')\n  const toggleMode=()=>{\n    if (mode==='light') {\n     setmode('dark') ;\n     document.body.style.backgroundColor ='gray'\n     showAlert(\"Dark mode is Enable\",\"Sucsess\")\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode is Enable\",\"Sucsess\")\n    }\n\n  }\n  return (\n <>\n        <Navbar title=\"Check Text\" TextLink=\"About\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <TextForm showAlert={showAlert} heading=\"Write the text to Analyze:\"/>\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n {/* <BrowserRouter>\n    <Routes>\n      <Route exactpath=\"/card\" element={<Cards  mode={mode} toggleMode={toggleMode} />} />\n    </Routes>\n  </BrowserRouter> */}\n  \n\n </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}