{"version":3,"sources":["components/Navbar.js","components/About.js","components/TextForm.js","components/Cards.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","TextLink","href","aria-disabled","onClick","toggleMode","role","htmlFor","About","myStyle","setmyStyle","useState","color","backgroundColor","btnText","mybtnText","Fragment","style","class","data-bs-parent","toggleStyle","TextForm","text","setText","heading","value","rows","onChange","event","target","handleUpclick","console","log","newText","toUpperCase","showAlert","handleLowerclick","toLowerCase","split","length","Cards","mystyle","setmystyle","mybutton","setMybutton","src","alt","darkmode","Alert","alert","message","App","setAlert","setTimeout","setmode","document","body","BrowserRouter","Routes","Route","exact","path","element","exactpath","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cebebf9a.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" \r\n      data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        \r\n            \r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.TextLink}</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/card\">Cards</Link>\r\n          </li>\r\n          \r\n          {/* <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li> */}\r\n          <li className=\"nav-item\">\r\n            <a href='https://example.com' className=\"nav-link disabled\" aria-disabled=\"true\">Disable</a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"form-check form-switch\">\r\n              <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  \r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n  const [myStyle, setmyStyle]= useState({\r\n    color: 'black',\r\n    backgroundColor: 'white'\r\n  })\r\n const [btnText, mybtnText] = useState(\"Enable Dark Mode\")\r\n  const toggleStyle = ()=>{\r\n    if(myStyle.color==='black'){\r\n      setmyStyle({\r\n        color: 'white',\r\n        backgroundColor: 'black'\r\n      })\r\n      mybtnText(\"Enable Light Mode\")\r\n    }\r\n    else{\r\n      setmyStyle({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n      })\r\n      mybtnText(\"Enable Dark Mode\")\r\n    }\r\n  }\r\n \r\n  return (\r\n    <>\r\n    <div className=\"container mt-5\" style={myStyle}>\r\n       <h1>About Us</h1>\r\n              <div class=\"accordion\" id=\"accordionExample\">\r\n                <div class=\"accordion-item\">\r\n                  <h2 class=\"accordion-header\">\r\n                    <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                      Accordion Item #1\r\n                    </button>\r\n                  </h2>\r\n                  <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\" style={myStyle}>\r\n                      <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"accordion-item\" style={myStyle}>\r\n                  <h2 class=\"accordion-header\">\r\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                      Accordion Item #2\r\n                    </button>\r\n                  </h2>\r\n                  <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\" style={myStyle}>\r\n                      <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"accordion-item\" style={myStyle}>\r\n                  <h2 class=\"accordion-header\">\r\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                      Accordion Item #3\r\n                    </button>\r\n                  </h2>\r\n                  <div id=\"collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\" style={myStyle}>\r\n                      <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n<button onClick={toggleStyle} className='btn btn-primary my-4'>{btnText}</button>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick =() =>{\r\n      console.log(\"This is text\" + text);\r\n      let newText=text.toUpperCase()\r\n    setText(newText)\r\n    props.showAlert(\"Convert to UpperCase\",\"Success\");\r\n\r\n    }\r\n    const handleLowerclick =() =>{\r\n      let newText=text.toLowerCase()\r\n    setText(newText)\r\n    props.showAlert(\"Convert to LowerCase\",\"Success\");\r\n\r\n    }\r\n    const handlerOnChange =(event) =>{\r\n        // console.log(\"This is text\"); \r\n        setText(event.target.value); // text=value\r\n      }\r\n    const [text, setText] = useState(\"Type Text here\")\r\n  return (\r\n    <>\r\n<div className='container'>\r\n   <div className=\"mb-3\">\r\n        <h1>{props.heading}</h1>\r\n         <textarea className=\"form-control\" id=\"textArea\" value={text} rows=\"5\" onChange={handlerOnChange}></textarea>\r\n   </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpclick}>Convert to UPPER case</button>\r\n        <button className=\"btn btn-primary mx-4\" onClick={handleLowerclick}>Convert to lower case</button>\r\n  </div><br />\r\n  <div className=\"container\">\r\n    <h3>Text Summery</h3>\r\n    <p>{text.split(\" \").length} words, {text.length} Characters</p>\r\n    <p>{0.008 * text.split(\" \").length}Minute Read</p>\r\n    <h4>Preview</h4>\r\n    <p>{text}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n","\r\nimport React,{useState} from 'react'\r\n\r\nexport default function Cards(props) {\r\n  // const [mybutton, setmybutton]=useState({\"Enable Dark mode\"})\r\n  \r\n  const [mystyle, setmystyle] = useState({\r\n    color: 'black',\r\n    backgroundColor: 'white'\r\n  })\r\n  const darkmode=()=>{\r\n  if (mystyle.color==='black') {\r\n    setmystyle({\r\n      color: 'White',\r\n    backgroundColor: 'black'\r\n    })\r\n    setMybutton(\"Enable Dark Mode\");\r\n  }\r\n  else {\r\n    setmystyle({\r\n      color:'black',\r\n      backgroundColor:'white'\r\n    })\r\n    setMybutton(\"Enable Light Mode\");\r\n  }\r\n  }\r\n\r\n    const [mybutton, setMybutton]=useState(\"Enable Dark mode\")\r\n  return (\r\n    <>\r\n    <div className='container mt-4 py-4 ' >\r\n    <h1>Cards</h1>\r\n      <div className=\"card my-4 mx-4\" style={mystyle}>\r\n            <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                \r\n            </div>\r\n      </div>\r\n      <div className=\"card my-4 mx-4\" style={mystyle}>\r\n            <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> \r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n            </div>\r\n      </div>\r\n      <button onClick={darkmode} className=\"btn btn-dark mx-4 \">{mybutton}</button>\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n// const capitalize =(word)=>{\r\n//     const lower=word.toLowerCase();\r\n//     return lower.charAt(0).toUpperCase+lower.slice(1)\r\n// }\r\n  return (\r\n    props.alert && <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}:</strong> {props.alert.message}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport Cards from './components/Cards';\nimport Alert from './components/Alert';\nimport React,{useState} from 'react'\nimport { BrowserRouter as Router, Route, Routes, BrowserRouter,  \n} from 'react-router-dom';\n\n\nfunction App() {\n  const [alert, setAlert]=useState(null)\n  const showAlert=(message, type)=>\n  {\n       setAlert({\n        message:message,\n        type:type})\n        setTimeout(() => {\n          setAlert(null)\n        }, 2000);\n      }\n  const [mode, setmode]=useState('light')\n  const toggleMode=()=>{\n    if (mode==='light') {\n     setmode('dark') ;\n     document.body.style.backgroundColor ='gray'\n     showAlert(\"Dark mode is Enable\",\"Sucsess\")\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode is Enable\",\"Sucsess\")\n    }\n\n  }\n  return (\n <>\n <BrowserRouter>\n        <Navbar title=\"Check Text\" TextLink=\"About\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n    <Routes>\n      <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Write the text to Analyze:\"/>} />\n      <Route exact path=\"/about\" element={<About />} />\n      <Route exactpath=\"/card\" element={<Cards  mode={mode} toggleMode={toggleMode} />} />\n    </Routes>\n  </BrowserRouter>\n\n </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}